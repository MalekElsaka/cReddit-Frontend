import { describe, it, expect, vi, afterEach } from "vitest";
import { render, screen, cleanup, fireEvent, waitFor } from "@testing-library/react";
import "@testing-library/jest-dom/vitest";
import NSFW from "@/Components/NSFW/NSFW";
import { MemoryRouter } from 'react-router-dom';

afterEach(() => {
    cleanup();
});


describe("NSFW", () => {

    // Generated by CodiumAI

    describe('NSFW', () => {

        // Renders the NSFW component with appropriate content and buttons
        it('should render the NSFW component with appropriate content and buttons', () => {
            // Arrange
            const setOver18 = vi.fn();

            // Act
            render(<MemoryRouter><NSFW setOver18={setOver18} /></MemoryRouter>);

            // Assert
            expect(screen.getByText('Mature Content')).toBeInTheDocument();
            expect(screen.getByText('This page may contain mature or adult content. To continue, confirm you’re over 18 and we’ll update your settings to show mature content.')).toBeInTheDocument();
            expect(screen.getByText('After continuing, you can visit your settings at any time to hide mature content again.')).toBeInTheDocument();
            // expect(screen.getByTestId('NSFW-go-home')).toBeInTheDocument();
            // expect(screen.getByTestId('NSFW-over18')).toBeInTheDocument();
        });

        // setOver18 prop is not provided
        it('should not call setOver18 when setOver18 prop is not provided', () => {
            // Arrange
            const setOver18 = vi.fn();

            // Act
            render(<MemoryRouter><NSFW /> </MemoryRouter>);

            // Assert
            expect(setOver18).not.toHaveBeenCalled();
        });
    });


});